@{
    Page.Title = "Sorting Quiz";
    Layout = "~/Shared/_SiteLayout.cshtml";

    if (!WebSecurity.IsAuthenticated)
    {
        Response.Redirect("~/Login");
    }

    string userHouse = "";

    Database db = Database.Open("StarterSite");


    if (IsPost)
    {

        Validation.RequireField("group2", "You have to answer this question");
        Validation.RequireField("group3", "You have to answer this question");
        Validation.RequireField("group4", "You have to answer this question");
        Validation.RequireField("group5", "You have to answer this question");
    }

    if (IsPost && Validation.IsValid())
    {
        int griffPoints = 0;
        int slythPoints = 0;
        int huffPoints = 0;
        int ravenPoints = 0;

        for (int i = 0; i < 5; i++)
        {
            string s = "group" + (i + 1);
            switch (Request.Form[s])
            {
                case "a":
                    griffPoints++;
                    break;
                case "b":
                    slythPoints++;
                    break;
                case "c":
                    huffPoints++;
                    break;
                case "d":
                    ravenPoints++;
                    break;
            }
        }

        int highestValue = Math.Max(griffPoints, Math.Max(slythPoints, Math.Max(huffPoints, ravenPoints)));

        if (griffPoints == highestValue)
        {
            userHouse = "Gryffindor";
        }
        if (slythPoints == highestValue)
        {
            if (string.IsNullOrEmpty(userHouse))
            {
                userHouse = "Slytherin";
            }
            else
            {
                string slyth = "Slytherin";
                int usersSlyth = db.QueryValue("SELECT Count(*) FROM UserProfile WHERE House = @0", slyth);
                int usersOther = db.QueryValue("SELECT Count(*) FROM UserProfile WHERE House = @0", userHouse);
                if (usersSlyth < usersOther)
                {
                    userHouse = "Slytherin";
                }
            }
        }
        if (huffPoints == highestValue)
        {
            if (string.IsNullOrEmpty(userHouse))
            {
                userHouse = "Hufflepuff";
            }
            else
            {
                string huff = "Hufflepuff";
                int usersHuff = db.QueryValue("SELECT Count(*) FROM UserProfile WHERE House = @0", huff);
                int usersOther = db.QueryValue("SELECT Count(*) FROM UserProfile WHERE House = @0", userHouse);
                if (usersHuff < usersOther)
                {
                    userHouse = "Hufflepuff";
                }
            }
        }
        if (ravenPoints == highestValue)
        {
            if (string.IsNullOrEmpty(userHouse))
            {
                userHouse = "Ravenclaw";
            }
            else
            {
                string raven = "Ravenclaw";
                int usersRaven = db.QueryValue("SELECT Count(*) FROM UserProfile WHERE House = @0", raven);
                int usersOther = db.QueryValue("SELECT Count(*) FROM UserProfile WHERE House = @0", userHouse);
                if (usersRaven < usersOther)
                {
                    userHouse = "Ravenclaw";
                }
            }
        }

        //De queries om een gebruikersprofiel aan te maken
        db.Execute("UPDATE UserProfile SET House = @0 WHERE UserId = @1", userHouse, WebSecurity.CurrentUserId);
        db.Execute("INSERT INTO StudentInformation (UserId, Jellybeans, Points, SpellsId, BagId, ClassesId) VALUES (@0, @1, @2, @3, @4, @5)", WebSecurity.CurrentUserId, 100, 0, WebSecurity.CurrentUserId, WebSecurity.CurrentUserId, WebSecurity.CurrentUserId);
        db.Execute("INSERT INTO Classes (ClassesId, Class1, Class2, Class3, Class4, Class5, Class6, Class7) VALUES (@0, @1, @2, @3, @4, @5, @6, @7)", WebSecurity.CurrentUserId,"Potions", "Defence Against the Dark Arts", "Transfiguration", "Herbology", "Charms", "History of Magic", "Astronomy");
        db.Execute("INSERT INTO Bag (BagId) VALUES (@0)", WebSecurity.CurrentUserId);
        db.Execute("INSERT INTO Spells (SpellsId) VALUES (@0)", WebSecurity.CurrentUserId);
        Validation.RequireField("group1", "You have to answer this question");
        Response.Redirect("SortingResult");
    }

    //int sorted = db.QueryValue("SELECT Count(House) FROM UserProfile WHERE userId = @0", WebSecurity.CurrentUserId);

    //if(sorted == 1)
    //{
    //    Response.Redirect("Home");
    //}
}
<div class="row">
    <div class="center">
        <h4>Meet the houses</h4>
        <hr class="col s8 offset-s2 m6 offset-m3 l2 offset-l5" />
    </div>
</div>

@*Cards met informatie over de Houses*@
<div class="row">
    @*Gryffindor*@
    <div class="col s6 m4 offset-m2 l3 offset-l3 card">
        <div class="card-image waves-effect waves-block waves-light">
            <img class="activator" src="~/Images/Gryffindor.png">
        </div>
        <div class="center">
            <span class="card-title activator grey-text text-darken-4">Gryffindor</span>
        </div>
        <div class="card-reveal">
            <span class="card-title grey-text text-darken-4">Gryffindor<i class="material-icons right">close</i></span>
            <p>With a lion as its crest and Professor McGonagall at its head, Gryffindor is the house which most values the virtues of courage, bravery and determination</p>
        </div>
    </div>
    @*Slytherin*@
    <div class="col s6 m4 l3 card">
        <div class="card-image waves-effect waves-block waves-light">
            <img class="activator" src="~/Images/Slytherin.png">
        </div>
        <div class="center">
            <span class="card-title activator grey-text text-darken-4">Slytherin</span>
        </div>
        <div class="card-reveal">
            <span class="card-title grey-text text-darken-4">Slytherin<i class="material-icons right">close</i></span>
            <p>Slytherin produces more than its share of Dark wizards, but also turns out leaders who are proud, ambitious and cunning. Merlin is one particularly famous Slytherin</p>
        </div>
    </div>
    @*Hufflepuff*@
    <div class="col s6 m4 offset-m2 l3 offset-l3 card">
        <div class="card-image waves-effect waves-block waves-light">
            <img class="activator" src="~/Images/Hufflepuff.png">
        </div>
        <div class="center">
            <span class="card-title activator grey-text text-darken-4">Hufflepuff</span>
        </div>
        <div class="card-reveal">
            <span class="card-title grey-text text-darken-4">Hufflepuff<i class="material-icons right">close</i></span>
            <p>Hufflepuffs value hard work, patience, loyalty, and fair play. The house has produced its share of great wizards – not least Newt Scamander, author of Fantastic Beasts and Where to Find Them</p>
        </div>
    </div>
    @*Ravenclaw*@
    <div class="col s6 m4 l3 card">
        <div class="card-image waves-effect waves-block waves-light">
            <img class="activator" src="~/Images/Ravenclaw.png">
        </div>
        <div class="center">
            <span class="card-title activator grey-text text-darken-4">Ravenclaw</span>
        </div>
        <div class="card-reveal">
            <span class="card-title grey-text text-darken-4">Ravenclaw<i class="material-icons right">close</i></span>
            <p>Ravenclaws prize wit, learning, and wisdom. It's an ethos etched into founder Rowena Ravenclaw diadem: 'wit beyond measure is man's greatest treasure'</p>
        </div>
    </div>
</div>

<div class="row">
    <div class="center col s8 offset-s2 m6 offset-m3 l4 offset-l4">
        <img class="responsive-img" src="~/Images/Sorting_Hat.png">
        <hr />
    </div>
</div>

<div class="row">
    <form class="col offset-m2" method="post">
        @RenderPage("~/Vragen/_Vraag1.cshtml")
        @RenderPage("~/Vragen/_Vraag2.cshtml")
        @RenderPage("~/Vragen/_Vraag3.cshtml")
        @RenderPage("~/Vragen/_Vraag4.cshtml")
        @RenderPage("~/Vragen/_Vraag5.cshtml")
        <button class="btn waves-effect black light" type="submit">Sort!</button>
    </form>
</div>